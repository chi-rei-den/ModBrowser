@model List<Chireiden.ModBrowser.Models.Mod>
@using Humanizer;
@using Microsoft.AspNetCore.Mvc.Localization

@inject IHtmlLocalizer<Chireiden.ModBrowser.Resources.Localization> Loc

@{
    ViewData["Title"] = Loc["TitleModIndex"];
}

<h1>@Loc["TitleModIndex"]</h1>

<p>
    <a asp-action="Create">@Loc["Create"]</a>
</p>
@using (Html.BeginForm())
{
    <div class="form-actions no-color">
        <p>
            @Loc["FindByName"]<input type="text" name="Search" value="@ViewData["search"]" />
            <input type="submit" value="@Loc["Search"]" class="btn btn-primary" /> |
            <a asp-action="Index">@Loc["BackToFullList"]</a>
        </p>
    </div>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model[0].DisplayName), "Index", new { by = "n", order = ViewData["order"], filter = ViewData["search"] })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model[0].Version), "Index", new { by = "v", order = ViewData["order"], filter = ViewData["search"] }) |
                @Html.ActionLink(Html.DisplayNameFor(model => model[0].Size), "Index", new { by = "s", order = ViewData["order"], filter = ViewData["search"] })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model[0].Author), "Index", new { by = "a", order = ViewData["order"], filter = ViewData["search"] })
            </th>
            <th />
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model[0].UpdateTimeStamp), "Index", new { by = "u", order = ViewData["order"], filter = ViewData["search"] })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model[0].ModLoaderVersion), "Index", new { by = "m", order = ViewData["order"], filter = ViewData["search"] })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model[0].Downloads), "Index", new { by = "d", order = ViewData["order"], filter = ViewData["search"] }) |
                @Html.ActionLink(Html.DisplayNameFor(model => model[0].Hot), "Index", new { by = "h", order = ViewData["order"], filter = ViewData["search"] })
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Name" title="@Html.DisplayFor(modelItem => item.Name) (@Html.DisplayFor(modelItem => item.DisplayName))">@(Html.Raw(item.DisplayName.TagToHtml()))</a>
                    <br />
                    @if (!string.IsNullOrWhiteSpace(item.IconURL))
                    {
                        <br />
                        <img src="direct/@(Html.DisplayFor(modelItem => item.Name)).png" alt="@Html.DisplayFor(modelItem => item.IconURL)" />
                    }
                </td>
                <td>
                    <a href="/tModLoader/download.php?Down=mods/@(Html.DisplayFor(modelItem => item.Name)).tmod">@Loc["Download"] @Html.DisplayFor(modelItem => item.Version) (@Html.Raw(item.Size.Bytes().ToString("#.#")))</a>
                </td>
                <td>
                    @Html.Raw(item.Author.Truncate(20))
                </td>
                <td>
                    @if (!string.IsNullOrWhiteSpace(item.Homepage))
                    {
                        <button type="button" class="btn btn-info" data-toggle="collapse" data-target="#home_@Html.DisplayFor(modelItem => item.Name)">@Loc["Homepage"]</button>
                        <div id="home_@Html.DisplayFor(modelItem => item.Name)" class="collapse">
                            <a href="@Html.DisplayFor(modelItem => item.Homepage)">@Html.DisplayFor(modelItem => item.Homepage)</a>
                        </div>
                    }
                    @if (!string.IsNullOrWhiteSpace(item.Description))
                    {
                        <button type="button" class="btn btn-info" data-toggle="collapse" data-target="#desc_@Html.DisplayFor(modelItem => item.Name)">@Loc["Description"]</button>
                        <div id="desc_@Html.DisplayFor(modelItem => item.Name)" class="collapse">
                            @Html.Raw(item.Description.TagToHtml())
                        </div>
                    }
                    @Html.ActionLink(Loc.GetString("LocalizerPackage"), "Index", "Localizer", new { mod = item.Name })
                </td>
                <td>
                    <span title="@Html.DisplayFor(modelItem => item.UpdateTimeStamp)">@Html.Raw(item.GetUpdateTimestamp().Humanize())</span>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModLoaderVersion)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Name">@Loc["Edit"]</a> | <a asp-action="Delete" asp-route-id="@item.Name">@Loc["Delete"]</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@Html.ActionLink("<<--", "Index", new { by = ViewData["by"], page = (int)ViewData["page"] - 5, filter = ViewData["search"] }) | @Html.ActionLink("<-", "Index", new { by = ViewData["by"], page = (int)ViewData["page"] - 1, filter = ViewData["search"] }) | @Html.ActionLink("->", "Index", new { by = ViewData["by"], page = (int)ViewData["page"] + 1, filter = ViewData["search"] }) | @Html.ActionLink("-->>", "Index", new { by = ViewData["by"], page = (int)ViewData["page"] + 5, filter = ViewData["search"] })